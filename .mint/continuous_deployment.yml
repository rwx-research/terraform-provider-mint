tool-cache:
  vault: terraform_provider

on:
  github:
    push:
      - if: ${{ event.git.tag == "" }}
        init:
          release: false
          commit-sha: ${{ event.git.sha }}
          ref: ${{ event.git.ref }}

      - if: ${{ event.git.ref =~ '^refs/tags/v.+$' }}
        init:
          release: true
          commit-sha: ${{ event.git.ref }}
          ref: ${{ event.git.ref }}

concurrency-pools:
  - id: rwx-research/terraform-provider-mint:cd-${{ init.ref }}
    capacity: 1
    on-overflow: cancel-running

tasks:
  - key: code
    call: mint/git-clone 1.5.1
    with:
      preserve-git-dir: true
      repository: https://github.com/rwx-research/terraform-provider-mint.git
      ref: ${{ init.commit-sha }}
      github-access-token: ${{ github.token }}

  - key: tool-versions
    use: code
    call: mint/tool-versions 1.0.2
    filter:
      - .tool-versions

  - key: go
    call: mint/install-go 1.1.0
    with:
      go-version: ${{ tasks.tool-versions.values.golang }}

  - key: golangci-lint
    use: go
    run: |
      curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/bin v${{ tasks.tool-versions.values.golangci-lint }}

  - key: goreleaser
    if: ${{ init.release}}
    run: |
      curl -sfLO "$RELEASES_URL/download/$VERSION/$TAR_FILE"
      tmpdir=$(mktemp -d)
      tar -xf $TAR_FILE -C $tmpdir
      sudo install ${tmpdir}/goreleaser /usr/local/bin
      rm $TAR_FILE
      rm -rf $tmpdir
    env:
      VERSION: "v${{ tasks.tool-versions.values.goreleaser }}"
      RELEASES_URL: "https://github.com/goreleaser/goreleaser/releases"
      TAR_FILE: "goreleaser_Linux_x86_64.tar.gz"

  - key: terraform
    call: hashicorp/install-terraform 1.0.2
    with:
      terraform-version: ${{ tasks.tool-versions.values.terraform }}

  - key: go-modules
    use: [code, go]
    run: |
      go mod download -x
      cd tools
      go mod download -x
    tool-cache: go-modules
    filter:
      - go.mod
      - go.sum
      - tools/go.mod
      - tools/go.sum

  - key: go-mod-tidy
    use: go-modules
    run: |
      go mod tidy
      git diff --exit-code

  - key: build
    use: go-modules
    run: go build -v .

  - key: lint
    use: [go-modules, golangci-lint]
    run: golangci-lint run --timeout=10m

  - key: docs
    use: [go-modules, terraform]
    run: |
      pushd tools
        go generate ./...
      popd
      git diff --exit-code

  - key: test
    use: go-modules
    run: go test -v ./...
    env:
      TF_ACC: 1
      RWX_ACCESS_TOKEN: ${{ vaults.terraform_provider.secrets.RWX_ACCESS_TOKEN }}

  - key: import-gpg-key
    if: ${{ init.release}}
    run: |
      gpg --import --batch --yes << EOF
      ${{ vaults.terraform_provider.secrets.GPG_PRIVATE_KEY }}
      EOF
      gpg --with-colons --fingerprint security@rwx.com | awk -F':' '$1=="pub"{print $5}' > "${MINT_VALUES}/fingerprint"

  - key: release
    if: ${{ init.release}}
    after: [build, lint, docs, test]
    use: [go-modules, goreleaser, import-gpg-key]
    run: goreleaser release --clean
    env:
      GITHUB_TOKEN: ${{ vaults.default.github-apps.rwx-bot.token }}
      GPG_FINGERPRINT: ${{ tasks.import-gpg-key.values.fingerprint }}
      GPG_PASSPHRASE: ${{ vaults.terraform_provider.secrets.GPG_PASSPHRASE }}
